{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FlipkartDataSet",
						"type": "DatasetReference"
					},
					"name": "FlipkartDataFlow"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Flipkart_Output_Parquet",
						"type": "DatasetReference"
					},
					"name": "ParquetSink"
				}
			],
			"transformations": [
				{
					"name": "Flipkartfilter1"
				},
				{
					"name": "AddPositiveRatio"
				},
				{
					"name": "AddTotalStars"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          title as string,",
				"          Rating as string,",
				"          maincateg as string,",
				"          platform as string,",
				"          actprice1 as string,",
				"          norating1 as string,",
				"          noreviews1 as string,",
				"          star_5f as string,",
				"          star_4f as string,",
				"          star_3f as string,",
				"          star_2f as string,",
				"          star_1f as string,",
				"          fulfilled1 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FlipkartDataFlow",
				"FlipkartDataFlow filter(toInteger(norating1) < 10 || toInteger(noreviews1) < 10\r",
				") ~> Flipkartfilter1",
				"Flipkartfilter1 derive(positive_review_ratio = toInteger(star_5f) / toInteger(norating1)) ~> AddPositiveRatio",
				"AddPositiveRatio derive(total_stars = toInteger(star_1f) * 1 + toInteger(star_2f) * 2 + toInteger(star_3f) * 3 + toInteger(star_4f) * 4 + toInteger(star_5f) * 5\r",
				") ~> AddTotalStars",
				"AddTotalStars sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ParquetSink"
			]
		}
	}
}